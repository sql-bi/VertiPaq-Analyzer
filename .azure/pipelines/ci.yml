parameters:
- name: verbosity
  displayName: Verbosity
  type: string
  default: minimal
  values:
  - minimal
  - normal
  - detailed
  - diagnostic

trigger: none

pool:
  vmImage: 'windows-latest'

variables:
  configuration: 'Release'
  assemblyVersion: '$(AppVersionMajor).0.0.0'
  semanticVersion: '$(AppVersionMajor).$(AppVersionMinor).$(AppVersionPatch)'

steps:
- task: PowerShell@2
  displayName: 'Set variables'
  inputs:
    targetType: 'inline'
    script: |
      $versionSuffix = "$(AppVersionSuffix)"
      Write-Host "Set VersionSuffix > '$versionSuffix'"
      Write-Host "##vso[task.setvariable variable=versionSuffix;]$versionSuffix"
      $packageVersion = "$(semanticVersion)"
      if ($versionSuffix -match "\S") { $packageVersion += "-$versionSuffix" }
      if ("$(isReleaseBuild)" -ne "true") { $packageVersion += "-CI-$(Build.BuildNumber)" }
      Write-Host "Set PackageVersion > '$packageVersion'"
      Write-Host "##vso[task.setvariable variable=packageVersion;]$packageVersion"
      Write-Host "##vso[build.updatebuildnumber]$packageVersion"
- task: DownloadSecureFile@1
  name: signKey
  displayName: 'Download sign key'
  inputs:
    secureFile: 'VertiPaq-Analyzer.snk'
- task: UseDotNet@2
  displayName: '.NET 6.0.x SDK setup'
  inputs:
    packageType: sdk
    version: 6.0.x
- task: UseDotNet@2
  displayName: '.NET 3.1.x runtime setup'
  inputs:
    packageType: runtime
    version: 3.1.x
- task: DotNetCoreCLI@2
  displayName: '.NET restore'
  inputs:
    command: 'restore'
    projects: 'VertiPaq-Analyzer.slnf'
    feedsToUse: 'select'
    verbosityRestore: '${{ parameters.verbosity }}'
- task: DotNetCoreCLI@2
  displayName: '.NET build'
  inputs:
    command: 'build'
    projects: 'VertiPaq-Analyzer.slnf'
    arguments: '--configuration "$(configuration)" --no-restore --verbosity ${{ parameters.verbosity }} /p:AssemblyVersion="$(assemblyVersion)" /p:FileVersion="$(semanticVersion)" /p:VersionPrefix="$(semanticVersion)" /p:VersionSuffix="$(versionSuffix)" /p:ContinuousIntegrationBuild="true" /p:AdditionalConstants="SIGNED" /p:SignAssembly="true" /p:AssemblyOriginatorKeyFile="$(signKey.secureFilePath)" /m'
- task: DotNetCoreCLI@2
  displayName: '.NET test'
  inputs:
    command: 'test'
    projects: 'VertiPaq-Analyzer.slnf'
    arguments: '--no-restore --no-build --verbosity ${{ parameters.verbosity }} --logger "trx;LogFilePrefix=testResults" --collect "Code coverage"'
- task: DotNetCoreCLI@2
  displayName: '.NET pack'
  inputs:
    command: 'pack'
    packagesToPack: 'VertiPaq-Analyzer.slnf'
    nobuild: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'packageVersion'
    verbosityPack: '${{ parameters.verbosity }}'
- task: PublishPipelineArtifact@1
  displayName: 'Publish artifacts'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'drop'
    publishLocation: 'pipeline'